// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct WindowProperties(Object<ffi::WebKitWindowProperties>);

    match fn {
        get_type => || ffi::webkit_window_properties_get_type(),
    }
}

impl WindowProperties {
    pub fn get_fullscreen(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_fullscreen(self.to_glib_none().0))
        }
    }

    //pub fn get_geometry(&self, geometry: /*Ignored*/gdk::Rectangle) {
    //    unsafe { TODO: call ffi::webkit_window_properties_get_geometry() }
    //}

    pub fn get_locationbar_visible(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_locationbar_visible(self.to_glib_none().0))
        }
    }

    pub fn get_menubar_visible(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_menubar_visible(self.to_glib_none().0))
        }
    }

    pub fn get_resizable(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_resizable(self.to_glib_none().0))
        }
    }

    pub fn get_scrollbars_visible(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_scrollbars_visible(self.to_glib_none().0))
        }
    }

    pub fn get_statusbar_visible(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_statusbar_visible(self.to_glib_none().0))
        }
    }

    pub fn get_toolbar_visible(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_window_properties_get_toolbar_visible(self.to_glib_none().0))
        }
    }
}
