// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

use PolicyDecision;
use URIRequest;
use URIResponse;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct ResponsePolicyDecision(Object<ffi::WebKitResponsePolicyDecision>): PolicyDecision;

    match fn {
        get_type => || ffi::webkit_response_policy_decision_get_type(),
    }
}

impl ResponsePolicyDecision {
    pub fn get_request(&self) -> Option<URIRequest> {
        unsafe {
            from_glib_none(ffi::webkit_response_policy_decision_get_request(self.to_glib_none().0))
        }
    }

    pub fn get_response(&self) -> Option<URIResponse> {
        unsafe {
            from_glib_none(ffi::webkit_response_policy_decision_get_response(self.to_glib_none().0))
        }
    }

    #[cfg(feature = "v2_4")]
    pub fn is_mime_type_supported(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_response_policy_decision_is_mime_type_supported(self.to_glib_none().0))
        }
    }
}
