// This file was generated by gir (d933f9a) from gir-files (469db10)
// DO NOT EDIT

#[cfg(any(feature = "v2_2", feature = "dox"))]
mod authentication_request;
#[cfg(any(feature = "v2_2", feature = "dox"))]
pub use self::authentication_request::AuthenticationRequest;
#[cfg(any(feature = "v2_2", feature = "dox"))]
pub use self::authentication_request::AuthenticationRequestExt;

mod back_forward_list;
pub use self::back_forward_list::BackForwardList;
pub use self::back_forward_list::BackForwardListExt;

mod back_forward_list_item;
pub use self::back_forward_list_item::BackForwardListItem;
pub use self::back_forward_list_item::BackForwardListItemExt;

#[cfg(any(feature = "v2_8", feature = "dox"))]
mod color_chooser_request;
#[cfg(any(feature = "v2_8", feature = "dox"))]
pub use self::color_chooser_request::ColorChooserRequest;
#[cfg(any(feature = "v2_8", feature = "dox"))]
pub use self::color_chooser_request::ColorChooserRequestExt;

mod context_menu;
pub use self::context_menu::ContextMenu;
pub use self::context_menu::ContextMenuExt;

mod context_menu_item;
pub use self::context_menu_item::ContextMenuItem;
pub use self::context_menu_item::ContextMenuItemExt;

mod cookie_manager;
pub use self::cookie_manager::CookieManager;
pub use self::cookie_manager::CookieManagerExt;

mod download;
pub use self::download::Download;
pub use self::download::DownloadExt;

#[cfg(any(feature = "v2_10", feature = "dox"))]
mod editor_state;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::editor_state::EditorState;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::editor_state::EditorStateExt;

mod favicon_database;
pub use self::favicon_database::FaviconDatabase;
pub use self::favicon_database::FaviconDatabaseExt;

mod file_chooser_request;
pub use self::file_chooser_request::FileChooserRequest;
pub use self::file_chooser_request::FileChooserRequestExt;

mod find_controller;
pub use self::find_controller::FindController;
pub use self::find_controller::FindControllerExt;

mod form_submission_request;
pub use self::form_submission_request::FormSubmissionRequest;
pub use self::form_submission_request::FormSubmissionRequestExt;

mod geolocation_permission_request;
pub use self::geolocation_permission_request::GeolocationPermissionRequest;

mod hit_test_result;
pub use self::hit_test_result::HitTestResult;
pub use self::hit_test_result::HitTestResultExt;

#[cfg(any(feature = "v2_10", feature = "dox"))]
mod install_missing_media_plugins_permission_request;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::install_missing_media_plugins_permission_request::InstallMissingMediaPluginsPermissionRequest;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::install_missing_media_plugins_permission_request::InstallMissingMediaPluginsPermissionRequestExt;

mod navigation_policy_decision;
pub use self::navigation_policy_decision::NavigationPolicyDecision;
pub use self::navigation_policy_decision::NavigationPolicyDecisionExt;

#[cfg(any(feature = "v2_8", feature = "dox"))]
mod notification;
#[cfg(any(feature = "v2_8", feature = "dox"))]
pub use self::notification::Notification;
#[cfg(any(feature = "v2_8", feature = "dox"))]
pub use self::notification::NotificationExt;

mod notification_permission_request;
pub use self::notification_permission_request::NotificationPermissionRequest;

mod permission_request;
pub use self::permission_request::PermissionRequest;
pub use self::permission_request::PermissionRequestExt;

mod plugin;
pub use self::plugin::Plugin;
pub use self::plugin::PluginExt;

mod policy_decision;
pub use self::policy_decision::PolicyDecision;
pub use self::policy_decision::PolicyDecisionExt;

#[cfg(any(feature = "v2_16", feature = "dox"))]
mod print_custom_widget;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::print_custom_widget::PrintCustomWidget;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::print_custom_widget::PrintCustomWidgetExt;

mod print_operation;
pub use self::print_operation::PrintOperation;
pub use self::print_operation::PrintOperationExt;

mod response_policy_decision;
pub use self::response_policy_decision::ResponsePolicyDecision;
pub use self::response_policy_decision::ResponsePolicyDecisionExt;

mod security_manager;
pub use self::security_manager::SecurityManager;
pub use self::security_manager::SecurityManagerExt;

mod settings;
pub use self::settings::Settings;
pub use self::settings::SettingsExt;

mod uri_request;
pub use self::uri_request::URIRequest;
pub use self::uri_request::URIRequestExt;

mod uri_response;
pub use self::uri_response::URIResponse;
pub use self::uri_response::URIResponseExt;

mod uri_scheme_request;
pub use self::uri_scheme_request::URISchemeRequest;
pub use self::uri_scheme_request::URISchemeRequestExt;

#[cfg(any(feature = "v2_6", feature = "dox"))]
mod user_content_manager;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::user_content_manager::UserContentManager;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::user_content_manager::UserContentManagerExt;

mod user_media_permission_request;
pub use self::user_media_permission_request::UserMediaPermissionRequest;
pub use self::user_media_permission_request::UserMediaPermissionRequestExt;

mod web_context;
pub use self::web_context::WebContext;
pub use self::web_context::WebContextExt;

mod web_inspector;
pub use self::web_inspector::WebInspector;
pub use self::web_inspector::WebInspectorExt;

mod web_resource;
pub use self::web_resource::WebResource;
pub use self::web_resource::WebResourceExt;

mod web_view;
pub use self::web_view::WebView;
pub use self::web_view::WebViewExt;

mod web_view_base;
pub use self::web_view_base::WebViewBase;

#[cfg(any(feature = "v2_10", feature = "dox"))]
mod website_data_manager;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::website_data_manager::WebsiteDataManager;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::website_data_manager::WebsiteDataManagerExt;

mod window_properties;
pub use self::window_properties::WindowProperties;
pub use self::window_properties::WindowPropertiesExt;

#[cfg(any(feature = "v2_2", feature = "dox"))]
mod credential;
#[cfg(any(feature = "v2_2", feature = "dox"))]
pub use self::credential::Credential;

mod javascript_result;
pub use self::javascript_result::JavascriptResult;

mod mime_info;
pub use self::mime_info::MimeInfo;

#[cfg(any(feature = "v2_6", feature = "dox"))]
mod navigation_action;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::navigation_action::NavigationAction;

#[cfg(any(feature = "v2_16", feature = "dox"))]
mod network_proxy_settings;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::network_proxy_settings::NetworkProxySettings;

#[cfg(any(feature = "v2_16", feature = "dox"))]
mod security_origin;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::security_origin::SecurityOrigin;

#[cfg(any(feature = "v2_6", feature = "dox"))]
mod user_script;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::user_script::UserScript;

#[cfg(any(feature = "v2_6", feature = "dox"))]
mod user_style_sheet;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::user_style_sheet::UserStyleSheet;

#[cfg(any(feature = "v2_12", feature = "dox"))]
mod web_view_session_state;
#[cfg(any(feature = "v2_12", feature = "dox"))]
pub use self::web_view_session_state::WebViewSessionState;

mod enums;
#[cfg(any(feature = "v2_2", feature = "dox"))]
pub use self::enums::AuthenticationScheme;
pub use self::enums::CacheModel;
pub use self::enums::ContextMenuAction;
pub use self::enums::CookieAcceptPolicy;
pub use self::enums::CookiePersistentStorage;
#[cfg(any(feature = "v2_2", feature = "dox"))]
pub use self::enums::CredentialPersistence;
pub use self::enums::DownloadError;
pub use self::enums::FaviconDatabaseError;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::enums::HardwareAccelerationPolicy;
pub use self::enums::InsecureContentEvent;
pub use self::enums::JavascriptError;
pub use self::enums::LoadEvent;
pub use self::enums::NavigationType;
pub use self::enums::NetworkError;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::enums::NetworkProxyMode;
pub use self::enums::PluginError;
pub use self::enums::PolicyDecisionType;
pub use self::enums::PolicyError;
pub use self::enums::PrintError;
pub use self::enums::PrintOperationResponse;
#[cfg(any(feature = "v2_4", feature = "dox"))]
pub use self::enums::ProcessModel;
pub use self::enums::SaveMode;
pub use self::enums::ScriptDialogType;
pub use self::enums::SnapshotError;
pub use self::enums::SnapshotRegion;
pub use self::enums::TLSErrorsPolicy;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::enums::UserContentInjectedFrames;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::enums::UserScriptInjectionTime;
#[cfg(any(feature = "v2_6", feature = "dox"))]
pub use self::enums::UserStyleLevel;

mod flags;
#[cfg(any(feature = "v2_10", feature = "dox"))]
pub use self::flags::EditorTypingAttributes;
pub use self::flags::FindOptions;
pub use self::flags::HitTestResultContext;
pub use self::flags::SnapshotOptions;
#[cfg(any(feature = "v2_16", feature = "dox"))]
pub use self::flags::WebsiteDataTypes;

#[doc(hidden)]
pub mod traits {
    #[cfg(any(feature = "v2_2", feature = "dox"))]
    pub use super::AuthenticationRequestExt;
    pub use super::BackForwardListExt;
    pub use super::BackForwardListItemExt;
    #[cfg(any(feature = "v2_8", feature = "dox"))]
    pub use super::ColorChooserRequestExt;
    pub use super::ContextMenuExt;
    pub use super::ContextMenuItemExt;
    pub use super::CookieManagerExt;
    pub use super::DownloadExt;
    #[cfg(any(feature = "v2_10", feature = "dox"))]
    pub use super::EditorStateExt;
    pub use super::FaviconDatabaseExt;
    pub use super::FileChooserRequestExt;
    pub use super::FindControllerExt;
    pub use super::FormSubmissionRequestExt;
    pub use super::HitTestResultExt;
    #[cfg(any(feature = "v2_10", feature = "dox"))]
    pub use super::InstallMissingMediaPluginsPermissionRequestExt;
    pub use super::NavigationPolicyDecisionExt;
    #[cfg(any(feature = "v2_8", feature = "dox"))]
    pub use super::NotificationExt;
    pub use super::PermissionRequestExt;
    pub use super::PluginExt;
    pub use super::PolicyDecisionExt;
    #[cfg(any(feature = "v2_16", feature = "dox"))]
    pub use super::PrintCustomWidgetExt;
    pub use super::PrintOperationExt;
    pub use super::ResponsePolicyDecisionExt;
    pub use super::SecurityManagerExt;
    pub use super::SettingsExt;
    pub use super::URIRequestExt;
    pub use super::URIResponseExt;
    pub use super::URISchemeRequestExt;
    #[cfg(any(feature = "v2_6", feature = "dox"))]
    pub use super::UserContentManagerExt;
    pub use super::UserMediaPermissionRequestExt;
    pub use super::WebContextExt;
    pub use super::WebInspectorExt;
    pub use super::WebResourceExt;
    pub use super::WebViewExt;
    #[cfg(any(feature = "v2_10", feature = "dox"))]
    pub use super::WebsiteDataManagerExt;
    pub use super::WindowPropertiesExt;
}
