// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

#[cfg(any(feature = "v2_16", feature = "dox"))]
use glib::translate::*;
use webkit2_sys;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct NetworkProxySettings(Boxed<webkit2_sys::WebKitNetworkProxySettings>);

    match fn {
        copy => |ptr| webkit2_sys::webkit_network_proxy_settings_copy(mut_override(ptr)),
        free => |ptr| webkit2_sys::webkit_network_proxy_settings_free(ptr),
        get_type => || webkit2_sys::webkit_network_proxy_settings_get_type(),
    }
}

impl NetworkProxySettings {
    pub fn new(default_proxy_uri: &str, ignore_hosts: &[&str]) -> NetworkProxySettings {
        assert_initialized_main_thread!();
        unsafe {
            // *mut WebKitNetworkProxySettings
            from_glib_none(webkit2_sys::webkit_network_proxy_settings_new(default_proxy_uri.to_glib_none().0, ignore_hosts.to_glib_none().0))
        }
    }

    #[cfg(any(feature = "v2_16", feature = "dox"))]
    pub fn add_proxy_for_scheme(&mut self, scheme: &str, proxy_uri: &str) {
        unsafe {
            webkit2_sys::webkit_network_proxy_settings_add_proxy_for_scheme(self.to_glib_none_mut().0, scheme.to_glib_none().0, proxy_uri.to_glib_none().0);
        }
    }
}
