// This file was generated by gir (32b0f11) from gir-files (857b8f5)
// DO NOT EDIT

#[cfg(feature = "v2_6")]
use NavigationType;
#[cfg(feature = "v2_6")]
use URIRequest;
use ffi;
use glib::translate::*;

glib_wrapper! {
    pub struct NavigationAction(Boxed<ffi::WebKitNavigationAction>);

    match fn {
        copy => |ptr| ffi::webkit_navigation_action_copy(mut_override(ptr)),
        free => |ptr| ffi::webkit_navigation_action_free(ptr),
    }
}

impl NavigationAction {
    #[cfg(feature = "v2_6")]
    pub fn get_modifiers(&self) -> u32 {
        unsafe {
            ffi::webkit_navigation_action_get_modifiers(mut_override(self.to_glib_none().0))
        }
    }

    #[cfg(feature = "v2_6")]
    pub fn get_mouse_button(&self) -> u32 {
        unsafe {
            ffi::webkit_navigation_action_get_mouse_button(mut_override(self.to_glib_none().0))
        }
    }

    #[cfg(feature = "v2_6")]
    pub fn get_navigation_type(&self) -> NavigationType {
        unsafe {
            from_glib(ffi::webkit_navigation_action_get_navigation_type(mut_override(self.to_glib_none().0)))
        }
    }

    #[cfg(feature = "v2_6")]
    pub fn get_request(&self) -> Option<URIRequest> {
        unsafe {
            from_glib_none(ffi::webkit_navigation_action_get_request(mut_override(self.to_glib_none().0)))
        }
    }

    #[cfg(feature = "v2_6")]
    pub fn is_user_gesture(&self) -> bool {
        unsafe {
            from_glib(ffi::webkit_navigation_action_is_user_gesture(mut_override(self.to_glib_none().0)))
        }
    }
}
